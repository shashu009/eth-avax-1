// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract CricketTournament {
    address public topScorer;
    mapping(address => uint) public cricketerRuns;

    event NewTopScorer(address indexed cricketer, uint totalRuns);

    function declareTopScorer(address cricketer, uint totalRuns) public {
        assert(totalRuns > 0);

        cricketerRuns[cricketer] = totalRuns;

        require(cricketer != topScorer, "Cricketer is already the current top scorer");

        if (totalRuns > cricketerRuns[topScorer]) {
            topScorer = cricketer;
            emit NewTopScorer(topScorer, totalRuns);
        } else {
            revert(" new Cricketer did not beat the current top scorer");
        }
    }
}
